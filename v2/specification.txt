Agent Services Specification
=================================

This document outlines the available agent services and their response formats.

Import Guide
-----------
1. SEC IAPD Agent:
   from agents.sec_iapd_agent import search_individual, search_individual_detailed_info

2. FINRA BrokerCheck Agent:
   from agents.finra_broker_check_agent import search_individual

3. SEC Arbitration Agent:
   from agents.sec_arbitration_agent import process_name, process_claim

4. FINRA Disciplinary Agent:
   from agents.finra_disciplinary_agent import search_individual

5. NFA Basic Agent:
   from agents.nfa_basic_agent import search_nfa_profile

6. Finra Disciplinary Agent
    rom agents.nfa_basic_agent import search_nfa_profile


----------------
SEC IAPD Agent
----------------
Purpose: Query the SEC's Investment Adviser Public Disclosure (IAPD) database

* search_individual

```
   def search_individual(crd_number: str, employee_number: Optional[str] = None, logger: Logger = logger) -> Optional[Dict]:
```                     

* Detailed Search (search_individual_detailed_info)

```   
    def search_individual_detailed_info(crd_number: str, employee_number: Optional[str] = None, logger: Logger = logger) -> Optional[Dict]:
```

----------------
FINRA BrokerCheck Agent
----------------

* search_individual
```
   def search_individual(crd_number: str, employee_number: Optional[str] = None, 
                     logger: Logger = logger) -> Optional[Dict]:
```

* Detailed Search (search_individual_detailed_info)

```   
    def search_individual_detailed_info(crd_number: str, employee_number: Optional[str] = None, logger: Logger = logger) -> Optional[Dict]:
```

----------------------
SEC Arbitration Agent
----------------------
* search_individual

```
def search_individual(first_name: str, last_name: str, 
                     employee_number: Optional[str] = None,
                     logger: Logger = logger) -> Dict[str, Any]:
```

----------------------
FINRA Disciplinary Agent
----------------------
* search_individual
``` python
   def search_individual(first_name: str, last_name: str,
                      employee_number: Optional[str] = None,
                      logger: Logger = logger) -> Dict[str, Any]:
```
-----------------
NFA BASIC system for futures industry professionals
-----------------

* Search Profile

```python
   def search_individual(first_name: str, last_name: str,
                       employee_number: Optional[str] = None,
                       logger: Logger = logger) -> Dict[str, Any]:
```


-----------------
FINRA Disciplinary agent
-----------------

```python
def search_individual(first_name: str, last_name: str, driver: webdriver.Chrome, 
                     logger: logging.Logger, service: str = "finra") -> Dict[str, Any]:
```



Usage Notes
----------
1. All agents accept an optional employee_number parameter for tracking
2. All agents use structured logging
4. Rate limiting should be handled by the calling application 


